let restaurant;var map;document.addEventListener("DOMContentLoaded",e=>{DBHelper.initServiceWorker()}),initServiceWorker=(()=>{"serviceWorker"in navigator&&navigator.serviceWorker.register("./service_worker.js").then(e=>{e.update(),console.log("Service worker registered")})}),window.initMap=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.error(e):(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:t.latlng,scrollwheel:!1}),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map))})}),fetchRestaurantFromURL=(async e=>{if(self.restaurant)return void e(null,self.restaurant);const t=getParameterByName("id");if(t){try{if(self.restaurant=await APIHelper.fetchRestaurantById(t),!self.restaurant)return}catch(e){console.error(e)}fillRestaurantHTML(),e(null,self.restaurant)}else error="No restaurant id in URL",e(error,null)}),fillRestaurantHTML=((e=self.restaurant)=>{document.getElementById("restaurant-name").innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address;const t=document.getElementById("restaurant-img");t.querySelector("img").className="restaurant-img",t.querySelector("img").src=`/img/${e.id}.png`,t.querySelector("source").srcset=`/img/${e.id}.webp`,t.alt=`Picture of restaurant ${e.name}`,document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML(),fillReviewsHTML()}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let r in e){const n=document.createElement("tr"),a=document.createElement("td");a.innerHTML=r,n.appendChild(a);const s=document.createElement("td");s.innerHTML=e[r],n.appendChild(s),t.appendChild(n)}}),fillReviewsHTML=((e=self.restaurant.reviews)=>{const t=document.getElementById("reviews-container"),r=document.createElement("h4");if(r.innerHTML="Reviews",t.append(r),!e){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const n=document.getElementById("reviews-list");e.forEach(e=>{n.appendChild(createReviewHTML(e))}),t.appendChild(n)}),createReviewHTML=(e=>{const t=`\n  <li>\n    <p tabindex="0" class="review-name">${e.name}</p>\n    <p class="review-date">${e.date}</p>\n    <p class="review-rating"><span>Rating: ${e.rating}</span></p>\n    <p class="review-comments">${e.comments}</p>\n  </li>  \n  `;return document.createRange().createContextualFragment(t)}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb"),r=document.createElement("li");r.innerHTML=e.name,t.appendChild(r)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const r=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return r?r[2]?decodeURIComponent(r[2].replace(/\+/g," ")):"":null});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
